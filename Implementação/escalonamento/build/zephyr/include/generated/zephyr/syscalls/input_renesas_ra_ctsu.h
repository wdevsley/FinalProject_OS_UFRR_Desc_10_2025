/* auto-generated by gen_syscalls.py, don't edit */

#ifndef Z_INCLUDE_SYSCALLS_INPUT_RENESAS_RA_CTSU_H
#define Z_INCLUDE_SYSCALLS_INPUT_RENESAS_RA_CTSU_H


#include <zephyr/tracing/tracing_syscall.h>

#ifndef _ASMLANGUAGE

#include <stdarg.h>

#include <zephyr/syscall_list.h>
#include <zephyr/syscall.h>

#include <zephyr/linker/sections.h>


#ifdef __cplusplus
extern "C" {
#endif

extern int z_impl_renesas_ra_ctsu_group_configure(const struct device * dev, const struct renesas_ra_ctsu_touch_cfg * cfg);

__pinned_func
static inline int renesas_ra_ctsu_group_configure(const struct device * dev, const struct renesas_ra_ctsu_touch_cfg * cfg)
{
#ifdef CONFIG_USERSPACE
	if (z_syscall_trap()) {
		union { uintptr_t x; const struct device * val; } parm0 = { .val = dev };
		union { uintptr_t x; const struct renesas_ra_ctsu_touch_cfg * val; } parm1 = { .val = cfg };
		return (int) arch_syscall_invoke2(parm0.x, parm1.x, K_SYSCALL_RENESAS_RA_CTSU_GROUP_CONFIGURE);
	}
#endif
	compiler_barrier();
	return z_impl_renesas_ra_ctsu_group_configure(dev, cfg);
}

#if defined(CONFIG_TRACING_SYSCALL)
#ifndef DISABLE_SYSCALL_TRACING

#define renesas_ra_ctsu_group_configure(dev, cfg) ({ 	int syscall__retval; 	sys_port_trace_syscall_enter(K_SYSCALL_RENESAS_RA_CTSU_GROUP_CONFIGURE, renesas_ra_ctsu_group_configure, dev, cfg); 	syscall__retval = renesas_ra_ctsu_group_configure(dev, cfg); 	sys_port_trace_syscall_exit(K_SYSCALL_RENESAS_RA_CTSU_GROUP_CONFIGURE, renesas_ra_ctsu_group_configure, dev, cfg, syscall__retval); 	syscall__retval; })
#endif
#endif


#ifdef __cplusplus
}
#endif

#endif
#endif /* include guard */
